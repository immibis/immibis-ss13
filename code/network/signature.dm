// You can sign a packet with SignPacket.
// You can retrieve the signature that it was signed with using
// CheckPacketSignature, which splits the packet into the original packet
// and signature ID.

// The signature nonces themselves are stored in a global list.
// The rationale is that they were generated by NT and programmed
// into every computer on the station before it was launched.

// Currently, you can't crack a key that hasn't been used yet, because
// it doesn't exist. This could be fixed later.

// Also, there are only 90000 possible nonces. Far too many to check manually,
// but trivial for a computer program, if you've already intercepted a signed
// packet. So it's still hackable by traitors.

// It's also trivially vulnerable to replay attacks.

var/list/packet_signatures = new

proc/SignPacket(signature_id, packet)
	if(istype(packet, /list))
		packet = list2params(packet)
	if(!(signature_id in packet_signatures))
		packet_signatures[signature_id] = "[rand(10000, 99999)]"
	return list("packet"=packet, "sig-id"=signature_id, "sig"=md5(packet_signatures[signature_id]+packet))

// returns list(signature_id, packet) or null
proc/CheckPacketSignature(packet)
	packet = params2list(packet)
	if(!packet)
		// Wrong packet format
		return null

	if(!("packet" in packet) || !("sig-id" in packet) || !("sig" in packet))
		// Wrong packet format
		return null

	var/nonce = packet_signatures[packet["sig-id"]]
	if(!nonce)
		// No such auth key
		return null

	if(md5(nonce + packet["packet"]) != packet["sig"])
		// Signature doesn't match
		return null

	// Authentication successful
	return list(packet["sig-id"], packet["packet"])